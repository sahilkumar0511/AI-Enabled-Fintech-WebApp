{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\eclipse-workspace\\\\H2H10626K_Sahil_Kumar\\\\FRONTEND\\\\react-16.8\\\\src\\\\components\\\\AnalyticsView.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React , {useState, useEffect} from \"react\";\n// import { Typography, TextField, Button, Grid } from \"@material-ui/core\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Highcharts from \"highcharts\";\n// import HighchartsReact from \"highcharts-react-official\";\n// import axios from \"axios\";\n\n// const useStyles = makeStyles(() => ({\n//   formContainer: {\n//     border: \"2px solid white\",\n//     padding: \"20px\",\n//     marginTop: \"20px\",\n//     marginBottom: \"20px\",\n//     borderRadius: \"5px\"\n//   },\n//   buttonRow: {\n//     display: \"flex\",\n//     justifyContent: \"flex-end\",\n//   },\n// }));\n\n// const Form = ({onFormSubmit}) => {\n//   const classes = useStyles();\n//   const [distributionChannel, setDistributionChannel] = useState(\"\");\n//   const [customerNumber, setCustomerNumber] = useState(\"\");\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const formData = {\n//       distributionChannel,\n//       customerNumber,\n//     };\n//     onFormSubmit(formData);\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <Grid container spacing={2} className={classes.formContainer}>\n//         <Grid item xs={12} sm={12} alignItems=\"center\">\n//           <TextField\n//             name=\"distributionChannel\"\n//             label=\"Distribution Channel\"\n//             variant=\"filled\"\n//             value={distributionChannel}\n//             onChange={(e) => setDistributionChannel(e.target.value)}\n//             style={{\n//               color: \"black\",\n//               backgroundColor: \"white\",\n//               borderTopLeftRadius: \"5px\",\n//               borderTopRightRadius: \"5px\",\n//             }}\n//             fullWidth\n//           />\n//         </Grid>\n//         <Grid item xs={12} sm={12} alignItems=\"center\">\n//           <TextField\n//             name=\"customernumber\"\n//             label=\"Customer Number\"\n//             variant=\"filled\"\n//             value={customerNumber}\n//             onChange={(e) => setCustomerNumber(e.target.value)}\n//             style={{\n//               color: \"black\",\n//               backgroundColor: \"white\",\n//               borderTopLeftRadius: \"5px\",\n//               borderTopRightRadius: \"5px\",\n//             }}\n//             fullWidth\n//           />\n//         </Grid>\n//         <Grid item xs={12} sm={12}>\n//           <Button\n//             type=\"submit\"\n//             variant=\"outlined\"\n//             //   color=\"secondary\"\n//             //   onClick={handleClear}\n//             style={{\n//               color: \"white\",\n//               backgroundColor: \"rgb(109, 111, 113)\",\n//               borderColor: \"white\",\n//             }}\n//             fullWidth\n//           >\n//             View\n//           </Button>\n//         </Grid>\n//       </Grid>\n//     </form>\n//   );\n// };\n\n// const BarGraph = ({ data }) => {\n//   const chartOptions = {\n//     chart: {\n//       type: \"column\",\n//     },\n//     title: {\n//       text: \"Distribution Channel vs Customer Number\",\n//     },\n//     xAxis: {\n//       categories: data.map(item => item.distributionChannel),\n//     },\n//     yAxis: {\n//       title: {\n//         text: \"Count\",\n//       },\n//     },\n//     series: [\n//       {\n//         name: \"Customer Number\",\n//         data: data.map(item => item.customerNumber),\n//       },\n//     ],\n//   };\n\n//   return <HighchartsReact highcharts={Highcharts} options={chartOptions} />;\n// };\n\n// const PieChart = ({ data }) => {\n//   const chartOptions = {\n//     chart: {\n//       type: \"pie\",\n//     },\n//     title: {\n//       text: \"Distribution Channel vs Customer Number\",\n//     },\n//     series: [\n//       {\n//         name: \"Count\",\n//         data: data.map((item) => ({\n//           name: item.DISTRIBUTION_CHANNEL,\n//           y: item.CUSTOMER_NUMBER\n//         })),\n//       },\n//     ],\n//   };\n\n//   return <HighchartsReact highcharts={Highcharts} options={chartOptions} />;\n// };\n\n// const AnalyticsView = () => {\n\n//   const [postData, setPostData] = useState([]);\n//   const [filteredData, setFilteredData] = useState([]);\n\n//   const handleFormSubmit = (formData) => {\n//     // Filter the data based on the entered distribution channel or customer number\n//     const filtered = postData.filter((item) => {\n//       return (\n//         item.DISTRIBUTION_CHANNEL === formData.distributionChannel ||\n//         item.CUSTOMER_NUMBER === formData.customerNumber.toString\n//       );\n//     });\n\n//     setFilteredData(filtered);\n//   };\n\n//   useEffect(() => {\n//     // Fetch data from the API and update the postData state\n//     const baseURL = \"http://localhost:8181/h2h_milestone_3/Read\";\n//     axios.get(baseURL).then((response) => {\n//       setPostData(response.data);\n//     });\n//   }, []);\n\n//   return (\n//     <Grid container spacing={2}>\n//       <Grid item xs={4}>\n//         <Form onFormSubmit={handleFormSubmit}/>\n//       </Grid>\n//       <Grid item xs={4}>\n//         <Typography variant=\"h6\">Bar Graph</Typography>\n//         <BarGraph data={filteredData} />\n//         {/* Include your bar graph component here */}\n//       </Grid>\n//       <Grid item xs={4}>\n//         <Typography variant=\"h6\">Pie Chart</Typography>\n//         <PieChart data={filteredData} />\n//         {/* Include your pie chart component here */}\n//       </Grid>\n//     </Grid>\n//   );\n// };\n\n// export default AnalyticsView;\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, TextField, Button, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  formContainer: {\n    border: \"2px solid white\",\n    padding: \"20px\",\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    borderRadius: \"5px\"\n  },\n  buttonRow: {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  }\n}));\nconst Form = _ref => {\n  _s();\n  let {\n    onFormSubmit\n  } = _ref;\n  const classes = useStyles();\n  const [DISTRIBUTION_CHANNEL, setDistributionChannel] = useState(\"\");\n  const [CUSTOMER_NUMBER, setCustomerNumber] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = {\n      DISTRIBUTION_CHANNEL,\n      CUSTOMER_NUMBER\n    };\n    onFormSubmit(formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.formContainer,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"distributionChannel\",\n          label: \"Distribution Channel\",\n          variant: \"filled\",\n          value: DISTRIBUTION_CHANNEL,\n          onChange: e => setDistributionChannel(e.target.value),\n          style: {\n            color: \"black\",\n            backgroundColor: \"white\",\n            borderTopLeftRadius: \"5px\",\n            borderTopRightRadius: \"5px\"\n          },\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"customerNumber\",\n          label: \"Customer Number\",\n          variant: \"filled\",\n          value: CUSTOMER_NUMBER,\n          onChange: e => setCustomerNumber(e.target.value),\n          style: {\n            color: \"black\",\n            backgroundColor: \"white\",\n            borderTopLeftRadius: \"5px\",\n            borderTopRightRadius: \"5px\"\n          },\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"outlined\",\n          style: {\n            color: \"white\",\n            backgroundColor: \"rgb(109, 111, 113)\",\n            borderColor: \"white\"\n          },\n          fullWidth: true,\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"P+gvn2tJRqusuVtMk705Ouyx8Ts=\", false, function () {\n  return [useStyles];\n});\n_c = Form;\nconst BarGraph = _ref2 => {\n  let {\n    data\n  } = _ref2;\n  const chartOptions = {\n    chart: {\n      type: \"column\"\n    },\n    title: {\n      text: \"Distribution Channel vs Customer Number\"\n    },\n    xAxis: {\n      categories: data.map(item => item.DISTRIBUTION_CHANNEL)\n    },\n    yAxis: {\n      title: {\n        text: \"Count\"\n      }\n    },\n    series: [{\n      name: \"Customer Number\",\n      data: data.map(item => item.CUSTOMER_NUMBER)\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(HighchartsReact, {\n    highcharts: Highcharts,\n    options: chartOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 10\n  }, this);\n};\n_c2 = BarGraph;\nconst PieChart = _ref3 => {\n  let {\n    data\n  } = _ref3;\n  const chartOptions = {\n    chart: {\n      type: \"pie\"\n    },\n    title: {\n      text: \"Distribution Channel vs Customer Number\"\n    },\n    series: [{\n      name: \"Count\",\n      data: data.map(item => ({\n        name: item.DISTRIBUTION_CHANNEL,\n        y: item.CUSTOMER_NUMBER\n      }))\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(HighchartsReact, {\n    highcharts: Highcharts,\n    options: chartOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 10\n  }, this);\n};\n_c3 = PieChart;\nconst AnalyticsView = () => {\n  _s2();\n  const [postData, setPostData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const handleFormSubmit = formData => {\n    // Filter the data based on the entered distribution channel or customer number\n    const filtered = postData.filter(item => {\n      return item.DISTRIBUTION_CHANNEL === formData.DISTRIBUTION_CHANNEL || item.CUSTOMER_NUMBER === formData.CUSTOMER_NUMBER.toString;\n    });\n    setFilteredData(filtered);\n  };\n  useEffect(() => {\n    // Fetch data from the API and update the postData state\n    const baseURL = \"http://localhost:8181/h2h_milestone_3/Read\";\n    axios.get(baseURL).then(response => {\n      setPostData(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onFormSubmit: handleFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Bar Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BarGraph, {\n        data: filteredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Pie Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n        data: filteredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this);\n};\n_s2(AnalyticsView, \"jY4LBgxmAaVZQaDlNmE0bq9p1vo=\");\n_c4 = AnalyticsView;\nexport default AnalyticsView;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"BarGraph\");\n$RefreshReg$(_c3, \"PieChart\");\n$RefreshReg$(_c4, \"AnalyticsView\");","map":{"version":3,"names":["React","useState","useEffect","Typography","TextField","Button","Grid","makeStyles","Highcharts","HighchartsReact","axios","jsxDEV","_jsxDEV","useStyles","formContainer","border","padding","marginTop","marginBottom","borderRadius","buttonRow","display","justifyContent","Form","_ref","_s","onFormSubmit","classes","DISTRIBUTION_CHANNEL","setDistributionChannel","CUSTOMER_NUMBER","setCustomerNumber","handleSubmit","e","preventDefault","formData","onSubmit","children","container","spacing","className","item","xs","sm","alignItems","name","label","variant","value","onChange","target","style","color","backgroundColor","borderTopLeftRadius","borderTopRightRadius","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","type","borderColor","_c","BarGraph","_ref2","data","chartOptions","chart","title","text","xAxis","categories","map","yAxis","series","highcharts","options","_c2","PieChart","_ref3","y","_c3","AnalyticsView","_s2","postData","setPostData","filteredData","setFilteredData","handleFormSubmit","filtered","filter","toString","baseURL","get","then","response","_c4","$RefreshReg$"],"sources":["C:/Users/KIIT/eclipse-workspace/H2H10626K_Sahil_Kumar/FRONTEND/react-16.8/src/components/AnalyticsView.js"],"sourcesContent":["// import React , {useState, useEffect} from \"react\";\r\n// import { Typography, TextField, Button, Grid } from \"@material-ui/core\";\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import Highcharts from \"highcharts\";\r\n// import HighchartsReact from \"highcharts-react-official\";\r\n// import axios from \"axios\";\r\n\r\n// const useStyles = makeStyles(() => ({\r\n//   formContainer: {\r\n//     border: \"2px solid white\",\r\n//     padding: \"20px\",\r\n//     marginTop: \"20px\",\r\n//     marginBottom: \"20px\",\r\n//     borderRadius: \"5px\"\r\n//   },\r\n//   buttonRow: {\r\n//     display: \"flex\",\r\n//     justifyContent: \"flex-end\",\r\n//   },\r\n// }));\r\n\r\n// const Form = ({onFormSubmit}) => {\r\n//   const classes = useStyles();\r\n//   const [distributionChannel, setDistributionChannel] = useState(\"\");\r\n//   const [customerNumber, setCustomerNumber] = useState(\"\");\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     const formData = {\r\n//       distributionChannel,\r\n//       customerNumber,\r\n//     };\r\n//     onFormSubmit(formData);\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <Grid container spacing={2} className={classes.formContainer}>\r\n//         <Grid item xs={12} sm={12} alignItems=\"center\">\r\n//           <TextField\r\n//             name=\"distributionChannel\"\r\n//             label=\"Distribution Channel\"\r\n//             variant=\"filled\"\r\n//             value={distributionChannel}\r\n//             onChange={(e) => setDistributionChannel(e.target.value)}\r\n//             style={{\r\n//               color: \"black\",\r\n//               backgroundColor: \"white\",\r\n//               borderTopLeftRadius: \"5px\",\r\n//               borderTopRightRadius: \"5px\",\r\n//             }}\r\n//             fullWidth\r\n//           />\r\n//         </Grid>\r\n//         <Grid item xs={12} sm={12} alignItems=\"center\">\r\n//           <TextField\r\n//             name=\"customernumber\"\r\n//             label=\"Customer Number\"\r\n//             variant=\"filled\"\r\n//             value={customerNumber}\r\n//             onChange={(e) => setCustomerNumber(e.target.value)}\r\n//             style={{\r\n//               color: \"black\",\r\n//               backgroundColor: \"white\",\r\n//               borderTopLeftRadius: \"5px\",\r\n//               borderTopRightRadius: \"5px\",\r\n//             }}\r\n//             fullWidth\r\n//           />\r\n//         </Grid>\r\n//         <Grid item xs={12} sm={12}>\r\n//           <Button\r\n//             type=\"submit\"\r\n//             variant=\"outlined\"\r\n//             //   color=\"secondary\"\r\n//             //   onClick={handleClear}\r\n//             style={{\r\n//               color: \"white\",\r\n//               backgroundColor: \"rgb(109, 111, 113)\",\r\n//               borderColor: \"white\",\r\n//             }}\r\n//             fullWidth\r\n//           >\r\n//             View\r\n//           </Button>\r\n//         </Grid>\r\n//       </Grid>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// const BarGraph = ({ data }) => {\r\n//   const chartOptions = {\r\n//     chart: {\r\n//       type: \"column\",\r\n//     },\r\n//     title: {\r\n//       text: \"Distribution Channel vs Customer Number\",\r\n//     },\r\n//     xAxis: {\r\n//       categories: data.map(item => item.distributionChannel),\r\n//     },\r\n//     yAxis: {\r\n//       title: {\r\n//         text: \"Count\",\r\n//       },\r\n//     },\r\n//     series: [\r\n//       {\r\n//         name: \"Customer Number\",\r\n//         data: data.map(item => item.customerNumber),\r\n//       },\r\n//     ],\r\n//   };\r\n\r\n//   return <HighchartsReact highcharts={Highcharts} options={chartOptions} />;\r\n// };\r\n\r\n// const PieChart = ({ data }) => {\r\n//   const chartOptions = {\r\n//     chart: {\r\n//       type: \"pie\",\r\n//     },\r\n//     title: {\r\n//       text: \"Distribution Channel vs Customer Number\",\r\n//     },\r\n//     series: [\r\n//       {\r\n//         name: \"Count\",\r\n//         data: data.map((item) => ({\r\n//           name: item.DISTRIBUTION_CHANNEL,\r\n//           y: item.CUSTOMER_NUMBER\r\n//         })),\r\n//       },\r\n//     ],\r\n//   };\r\n\r\n//   return <HighchartsReact highcharts={Highcharts} options={chartOptions} />;\r\n// };\r\n\r\n// const AnalyticsView = () => {\r\n  \r\n//   const [postData, setPostData] = useState([]);\r\n//   const [filteredData, setFilteredData] = useState([]);\r\n\r\n//   const handleFormSubmit = (formData) => {\r\n//     // Filter the data based on the entered distribution channel or customer number\r\n//     const filtered = postData.filter((item) => {\r\n//       return (\r\n//         item.DISTRIBUTION_CHANNEL === formData.distributionChannel ||\r\n//         item.CUSTOMER_NUMBER === formData.customerNumber.toString\r\n//       );\r\n//     });\r\n\r\n//     setFilteredData(filtered);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     // Fetch data from the API and update the postData state\r\n//     const baseURL = \"http://localhost:8181/h2h_milestone_3/Read\";\r\n//     axios.get(baseURL).then((response) => {\r\n//       setPostData(response.data);\r\n//     });\r\n//   }, []);\r\n\r\n  \r\n//   return (\r\n//     <Grid container spacing={2}>\r\n//       <Grid item xs={4}>\r\n//         <Form onFormSubmit={handleFormSubmit}/>\r\n//       </Grid>\r\n//       <Grid item xs={4}>\r\n//         <Typography variant=\"h6\">Bar Graph</Typography>\r\n//         <BarGraph data={filteredData} />\r\n//         {/* Include your bar graph component here */}\r\n//       </Grid>\r\n//       <Grid item xs={4}>\r\n//         <Typography variant=\"h6\">Pie Chart</Typography>\r\n//         <PieChart data={filteredData} />\r\n//         {/* Include your pie chart component here */}\r\n//       </Grid>\r\n//     </Grid>\r\n//   );\r\n// };\r\n\r\n// export default AnalyticsView;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Typography, TextField, Button, Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  formContainer: {\r\n    border: \"2px solid white\",\r\n    padding: \"20px\",\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  buttonRow: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst Form = ({ onFormSubmit }) => {\r\n  const classes = useStyles();\r\n  const [DISTRIBUTION_CHANNEL, setDistributionChannel] = useState(\"\");\r\n  const [CUSTOMER_NUMBER, setCustomerNumber] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = {\r\n      DISTRIBUTION_CHANNEL,\r\n      CUSTOMER_NUMBER,\r\n    };\r\n    onFormSubmit(formData);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Grid container spacing={2} className={classes.formContainer}>\r\n        <Grid item xs={12} sm={12} alignItems=\"center\">\r\n          <TextField\r\n            name=\"distributionChannel\"\r\n            label=\"Distribution Channel\"\r\n            variant=\"filled\"\r\n            value={DISTRIBUTION_CHANNEL}\r\n            onChange={(e) => setDistributionChannel(e.target.value)}\r\n            style={{\r\n              color: \"black\",\r\n              backgroundColor: \"white\",\r\n              borderTopLeftRadius: \"5px\",\r\n              borderTopRightRadius: \"5px\",\r\n            }}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} alignItems=\"center\">\r\n          <TextField\r\n            name=\"customerNumber\"\r\n            label=\"Customer Number\"\r\n            variant=\"filled\"\r\n            value={CUSTOMER_NUMBER}\r\n            onChange={(e) => setCustomerNumber(e.target.value)}\r\n            style={{\r\n              color: \"black\",\r\n              backgroundColor: \"white\",\r\n              borderTopLeftRadius: \"5px\",\r\n              borderTopRightRadius: \"5px\",\r\n            }}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12}>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"outlined\"\r\n            style={{\r\n              color: \"white\",\r\n              backgroundColor: \"rgb(109, 111, 113)\",\r\n              borderColor: \"white\",\r\n            }}\r\n            fullWidth\r\n          >\r\n            View\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst BarGraph = ({ data }) => {\r\n  const chartOptions = {\r\n    chart: {\r\n      type: \"column\",\r\n    },\r\n    title: {\r\n      text: \"Distribution Channel vs Customer Number\",\r\n    },\r\n    xAxis: {\r\n      categories: data.map((item) => item.DISTRIBUTION_CHANNEL),\r\n    },\r\n    yAxis: {\r\n      title: {\r\n        text: \"Count\",\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Customer Number\",\r\n        data: data.map((item) => item.CUSTOMER_NUMBER),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <HighchartsReact highcharts={Highcharts} options={chartOptions} />;\r\n};\r\n\r\nconst PieChart = ({ data }) => {\r\n  const chartOptions = {\r\n    chart: {\r\n      type: \"pie\",\r\n    },\r\n    title: {\r\n      text: \"Distribution Channel vs Customer Number\",\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Count\",\r\n        data: data.map((item) => ({\r\n          name: item.DISTRIBUTION_CHANNEL,\r\n          y: item.CUSTOMER_NUMBER,\r\n        })),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <HighchartsReact highcharts={Highcharts} options={chartOptions} />;\r\n};\r\n\r\nconst AnalyticsView = () => {\r\n  const [postData, setPostData] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n\r\n  const handleFormSubmit = (formData) => {\r\n    // Filter the data based on the entered distribution channel or customer number\r\n    const filtered = postData.filter((item) => {\r\n      return (\r\n        item.DISTRIBUTION_CHANNEL === formData.DISTRIBUTION_CHANNEL ||\r\n        item.CUSTOMER_NUMBER === formData.CUSTOMER_NUMBER.toString\r\n      );\r\n    });\r\n\r\n    setFilteredData(filtered);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the API and update the postData state\r\n    const baseURL = \"http://localhost:8181/h2h_milestone_3/Read\";\r\n    axios.get(baseURL).then((response) => {\r\n      setPostData(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={4}>\r\n        <Form onFormSubmit={handleFormSubmit} />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Typography variant=\"h6\">Bar Graph</Typography>\r\n        <BarGraph data={filteredData} />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Typography variant=\"h6\">Pie Chart</Typography>\r\n        <PieChart data={filteredData} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AnalyticsView;"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAAEC,IAAI,QAAQ,mBAAmB;AACvE,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGN,UAAU,CAAC,OAAO;EAClCO,aAAa,EAAE;IACbC,MAAM,EAAE,iBAAiB;IACzB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"},"metadata":{},"sourceType":"module","externalDependencies":[]}