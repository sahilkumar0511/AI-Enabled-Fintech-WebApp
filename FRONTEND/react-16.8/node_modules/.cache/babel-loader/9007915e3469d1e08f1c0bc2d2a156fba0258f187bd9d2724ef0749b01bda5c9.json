{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\HighRadius Summer Internship\\\\H2H10455K_Shaan_Masood\\\\FRONTEND\\\\react-16.8\\\\src\\\\components\\\\FetchedResult.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { makeStyles } from \"@mui/styles\";\nimport axios from \"axios\";\nimport GridButtons from \"./GridButtons\";\nimport { GridPagination } from \"@mui/x-data-grid\";\nimport \"./GridButtons.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"id\",\n  headerName: \"sl_no\",\n  width: 120,\n  editable: true\n}, {\n  field: \"CUSTOMER_ORDER_ID\",\n  headerName: \"CUSTOMER ORDER ID\",\n  width: 150,\n  editable: true\n}, {\n  field: \"SALES_ORG\",\n  headerName: \"SALES ORG\",\n  width: 140,\n  editable: true\n}, {\n  field: \"DISTRIBUTION_CHANNEL\",\n  headerName: \"DISTRIBUTION CHANNEL\",\n  width: 190,\n  editable: true\n}, {\n  field: \"COMPANY_CODE\",\n  headerName: \"COMPANY CODE\",\n  width: 160,\n  editable: true\n}, {\n  field: \"ORDER_CREATION_DATE\",\n  headerName: \"ORDER CREATING DATE\",\n  width: 170,\n  editable: true\n}, {\n  field: \"OrderAmount\",\n  headerName: \"ORDER_AMOUNT\",\n  width: 150,\n  editable: true\n}, {\n  field: \"ORDER_CURRENCY\",\n  headerName: \"ORDER CURRENCY\",\n  width: 180,\n  editable: true\n}, {\n  field: \"CUSTOMER_NUMBER\",\n  headerName: \"CUSTOMER NUMBER\",\n  width: 170,\n  editable: true\n}];\nconst useStyles = makeStyles(() => ({\n  root: {\n    \"& .MuiDataGrid-root\": {\n      backgroundColor: \"#a9a9a9\" // Change the background color here\n    },\n\n    \"& .MuiDataGrid-row\": {\n      borderBottom: \"1px solid white\" // Change the line color here\n    },\n\n    \"& .MuiDataGrid-cell\": {\n      color: \"white\" // Change the text color here\n    },\n\n    \"& .MuiDataGrid-columnHeader\": {\n      color: \"white\" // Change the text color here\n    },\n\n    \"& .MuiDataGrid-checkboxInput\": {\n      color: \"white\" // Change the checkbox color here\n    },\n\n    height: 500,\n    width: \"100%\",\n    position: \"relative\"\n  },\n  dataGrid: {\n    flexGrow: 1\n  },\n  footer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"100%\"\n  }\n}));\nconst baseURL = \"http://localhost:8181/h2h_milestone_3/Read\";\nexport default function FetchedResult(_ref) {\n  _s();\n  let {\n    customerId,\n    searchResults\n  } = _ref;\n  const classes = useStyles();\n  const [post, setPost] = React.useState(null);\n  const [refresh, setRefresh] = React.useState(false);\n  const [filteredData, setFilteredData] = React.useState([]);\n  console.log(customerId);\n  const handleRefresh = () => {\n    setRefresh(!refresh);\n  };\n  const handleEdit = () => {\n    console.log(\"Edit button clicked\");\n  };\n  const handleDelete = () => {\n    console.log(\"Delete button clicked\");\n  };\n  const handlePredict = () => {\n    console.log(\"Predict button clicked\");\n  };\n  React.useEffect(() => {\n    axios.get(baseURL).then(response => {\n      setPost(response.data);\n    });\n  }, []);\n  React.useEffect(() => {\n    if (!post) return; // Add a return statement here\n\n    const modifiedData = post.map(row => ({\n      ...row,\n      id: row.Sl_no\n    }));\n    const filteredResults = modifiedData.filter(result => result.CUSTOMER_ORDER_ID === Number(customerId));\n    setFilteredData(filteredResults);\n  }, [post, customerId]); // Include 'post' dependency in the useEffect dependency array\n\n  const CustomFooter = _ref2 => {\n    let {\n      pagination\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.footer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.buttonContainer,\n        children: /*#__PURE__*/_jsxDEV(GridButtons, {\n          onRefresh: handleRefresh,\n          onEdit: handleEdit,\n          onDelete: handleDelete,\n          onPredict: handlePredict\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }, this), pagination]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }, this);\n  };\n  if (!post) return null; // Return null if 'post' is null\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    style: {\n      height: 500,\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: filteredData,\n      columns: columns,\n      pageSize: 8,\n      rowsPerPageOptions: [8],\n      checkboxSelection: true,\n      disableSelectionOnClick: true,\n      components: {\n        Footer: props => /*#__PURE__*/_jsxDEV(CustomFooter, {\n          ...props,\n          pagination: /*#__PURE__*/_jsxDEV(GridPagination, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)\n      }\n    }, refresh, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(FetchedResult, \"uPvOtOJbcqQYLNEvy36A8g0gMf0=\", false, function () {\n  return [useStyles];\n});\n_c = FetchedResult;\nvar _c;\n$RefreshReg$(_c, \"FetchedResult\");","map":{"version":3,"names":["React","DataGrid","makeStyles","axios","GridButtons","GridPagination","jsxDEV","_jsxDEV","columns","field","headerName","width","editable","useStyles","root","backgroundColor","borderBottom","color","height","position","dataGrid","flexGrow","footer","display","alignItems","baseURL","FetchedResult","_ref","_s","customerId","searchResults","classes","post","setPost","useState","refresh","setRefresh","filteredData","setFilteredData","console","log","handleRefresh","handleEdit","handleDelete","handlePredict","useEffect","get","then","response","data","modifiedData","map","row","id","Sl_no","filteredResults","filter","result","CUSTOMER_ORDER_ID","Number","CustomFooter","_ref2","pagination","className","children","buttonContainer","onRefresh","onEdit","onDelete","onPredict","fileName","_jsxFileName","lineNumber","columnNumber","style","rows","pageSize","rowsPerPageOptions","checkboxSelection","disableSelectionOnClick","components","Footer","props","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/HighRadius Summer Internship/H2H10455K_Shaan_Masood/FRONTEND/react-16.8/src/components/FetchedResult.js"],"sourcesContent":["import React from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport axios from \"axios\";\r\nimport GridButtons from \"./GridButtons\";\r\nimport { GridPagination } from \"@mui/x-data-grid\";\r\nimport \"./GridButtons.css\";\r\n\r\nconst columns = [\r\n  {\r\n    field: \"id\",\r\n    headerName: \"sl_no\",\r\n    width: 120,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"CUSTOMER_ORDER_ID\",\r\n    headerName: \"CUSTOMER ORDER ID\",\r\n    width: 150,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"SALES_ORG\",\r\n    headerName: \"SALES ORG\",\r\n    width: 140,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"DISTRIBUTION_CHANNEL\",\r\n    headerName: \"DISTRIBUTION CHANNEL\",\r\n    width: 190,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"COMPANY_CODE\",\r\n    headerName: \"COMPANY CODE\",\r\n    width: 160,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"ORDER_CREATION_DATE\",\r\n    headerName: \"ORDER CREATING DATE\",\r\n    width: 170,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"OrderAmount\",\r\n    headerName: \"ORDER_AMOUNT\",\r\n    width: 150,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"ORDER_CURRENCY\",\r\n    headerName: \"ORDER CURRENCY\",\r\n    width: 180,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"CUSTOMER_NUMBER\",\r\n    headerName: \"CUSTOMER NUMBER\",\r\n    width: 170,\r\n    editable: true,\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    \"& .MuiDataGrid-root\": {\r\n      backgroundColor: \"#a9a9a9\", // Change the background color here\r\n    },\r\n    \"& .MuiDataGrid-row\": {\r\n      borderBottom: \"1px solid white\", // Change the line color here\r\n    },\r\n    \"& .MuiDataGrid-cell\": {\r\n      color: \"white\", // Change the text color here\r\n    },\r\n    \"& .MuiDataGrid-columnHeader\": {\r\n      color: \"white\", // Change the text color here\r\n    },\r\n    \"& .MuiDataGrid-checkboxInput\": {\r\n      color: \"white\", // Change the checkbox color here\r\n    },\r\n    height: 500,\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n  },\r\n  dataGrid: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nconst baseURL = \"http://localhost:8181/h2h_milestone_3/Read\";\r\n\r\nexport default function FetchedResult({ customerId, searchResults }) {\r\n  const classes = useStyles();\r\n  const [post, setPost] = React.useState(null);\r\n  const [refresh, setRefresh] = React.useState(false);\r\n  const [filteredData, setFilteredData] = React.useState([]);\r\n  console.log(customerId);\r\n\r\n  const handleRefresh = () => {\r\n    setRefresh(!refresh);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    console.log(\"Edit button clicked\");\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    console.log(\"Delete button clicked\");\r\n  };\r\n\r\n  const handlePredict = () => {\r\n    console.log(\"Predict button clicked\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    axios.get(baseURL).then((response) => {\r\n      setPost(response.data);\r\n    });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (!post) return; // Add a return statement here\r\n\r\n    const modifiedData = post.map((row) => ({\r\n      ...row,\r\n      id: row.Sl_no,\r\n    }));\r\n\r\n    const filteredResults = modifiedData.filter(\r\n      (result) => result.CUSTOMER_ORDER_ID === Number(customerId)\r\n    );\r\n    setFilteredData(filteredResults);\r\n  }, [post, customerId]); // Include 'post' dependency in the useEffect dependency array\r\n\r\n  const CustomFooter = ({ pagination }) => (\r\n    <div className={classes.footer}>\r\n      <div className={classes.buttonContainer}>\r\n        <GridButtons\r\n          onRefresh={handleRefresh}\r\n          onEdit={handleEdit}\r\n          onDelete={handleDelete}\r\n          onPredict={handlePredict}\r\n        />\r\n      </div>\r\n      <div style={{ flexGrow: 1 }}></div>\r\n      {pagination}\r\n    </div>\r\n  );\r\n\r\n  if (!post) return null; // Return null if 'post' is null\r\n\r\n  return (\r\n    <div className={classes.root} style={{ height: 500, width: \"100%\" }}>\r\n      <DataGrid\r\n        rows={filteredData}\r\n        columns={columns}\r\n        pageSize={8}\r\n        rowsPerPageOptions={[8]}\r\n        checkboxSelection\r\n        disableSelectionOnClick\r\n        components={{\r\n          Footer: (props) => (\r\n            <CustomFooter {...props} pagination={<GridPagination />} />\r\n          ),\r\n        }}\r\n        key={refresh}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}